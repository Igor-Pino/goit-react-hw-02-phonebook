{"version":3,"sources":["components/ContactInput/ContactInput.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["ContactInput","state","name","number","nameInputId","ShortId","generate","numberInputId","reset","setState","handelChange","e","currentTarget","value","handelSubmit","preventDefault","props","onSubmit","this","id","type","pattern","title","required","onChange","Component","ContactItem","contact","onDeleteContact","className","onClick","ContactsList","contacts","map","Filter","App","filter","handlerContact","newContact","find","toLowerCase","alert","deleteContact","contactId","changeFilter","contactFilter","normalizedFilter","includes","filteredNumbers","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.ab24fe56.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShortId from 'shortid';\n\nclass ContactInput extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = ShortId.generate();\n  numberInputId = ShortId.generate();\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handelChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handelSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handelSubmit}>\n        <label id={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            id={this.nameInputId}\n            onChange={this.handelChange}\n          />\n        </label>\n        <label id={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            id={this.numberInputId}\n            onChange={this.handelChange}\n          />\n        </label>\n        <button type=\"submit\">add contact</button>\n      </form>\n    );\n  }\n}\n\nContactInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactItem.scss';\n\nconst ContactItem = ({ contact, onDeleteContact }) => (\n  <>\n    <div className=\"contact\">\n      <span className=\"contact_name\">{contact.name}</span>\n      <span className=\"contact_number\">{contact.number}</span>\n    </div>\n    <button onClick={() => onDeleteContact(contact.id)} className=\"contact_btn\">\n      X\n    </button>\n  </>\n);\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\nimport './ContactsList.scss';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className=\"contact_list\">\n      {contacts.map(contact => (\n        <li key={contact.id} className=\"contactItem\">\n          <ContactItem contact={contact} onDeleteContact={onDeleteContact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport './ContactFilter.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <span className=\"filter_label\">Contact filter</span>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactInput from './components/ContactInput';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport ShortId from 'shortid';\nimport Filter from './components/ContactFilter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handlerContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const newContact = {\n      id: ShortId.generate(),\n      name: name,\n      number: number,\n    };\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === newContact.name.toLowerCase()) ||\n      contacts.find(contact => contact.number === newContact.number)\n    ) {\n      alert(`${newContact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  contactFilter = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredNumbers = this.contactFilter();\n\n    return (\n      <div className=\"main_container\">\n        <h1 className=\"title\">Phonebook</h1>\n\n        <ContactInput onSubmit={this.handlerContact} />\n\n        <h2 className=\"title\">Contacts</h2>\n\n        <Filter onChange={this.changeFilter} value={filter} />\n\n        <ContactsList contacts={filteredNumbers} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}