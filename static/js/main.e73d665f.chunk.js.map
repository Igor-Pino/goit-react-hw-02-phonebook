{"version":3,"sources":["components/ContactsList/ContactsList.module.scss","components/ContactFilter/ContactFilter.module.scss","styles/base.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactInput/ContactInput.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["module","exports","ContactInput","state","name","number","nameInputId","ShortId","generate","numberInputId","reset","setState","handelChange","e","currentTarget","value","handelSubmit","preventDefault","props","onSubmit","this","id","type","pattern","title","required","onChange","Component","ContactItem","contact","onDeleteContact","className","s","contactItem","contact_name","contact_number","onClick","contact_btn","ContactsList","contacts","contact_list","map","Filter","filter_label","App","filter","handlerContact","newContact","find","toLowerCase","alert","deleteContact","contactId","changeFilter","contactFilter","normalizedFilter","includes","filteredNumbers","main_container","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.e73d665f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactsList_root__2qSmw\",\"main_container\":\"ContactsList_main_container__3OG2S\",\"title\":\"ContactsList_title__2cWkh\",\"contact_btn\":\"ContactsList_contact_btn__Rbz30\",\"contact_list\":\"ContactsList_contact_list__32Ag6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactFilter_root__D0Six\",\"main_container\":\"ContactFilter_main_container__3jXCq\",\"title\":\"ContactFilter_title__3Idfq\",\"contact_btn\":\"ContactFilter_contact_btn__2UPkq\",\"filter_label\":\"ContactFilter_filter_label__ymWjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"base_root__36qMp\",\"main_container\":\"base_main_container__3vyqu\",\"title\":\"base_title__12qY5\",\"contact_btn\":\"base_contact_btn__Lw2qP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactItem_root__1LeH0\",\"main_container\":\"ContactItem_main_container__Whm3h\",\"title\":\"ContactItem_title__Iitfr\",\"contact_btn\":\"ContactItem_contact_btn__3sCaA\",\"contact\":\"ContactItem_contact__3uYjd\",\"contact_number\":\"ContactItem_contact_number__2w5_f\",\"contactItem\":\"ContactItem_contactItem__3-nzO\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ShortId from 'shortid';\r\n\r\nclass ContactInput extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = ShortId.generate();\r\n  numberInputId = ShortId.generate();\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handelChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handelSubmit}>\r\n        <label id={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            id={this.nameInputId}\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <label id={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            id={this.numberInputId}\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactInput.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactInput;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.scss';\n\nconst ContactItem = ({ contact, onDeleteContact }) => (\n  <li key={contact.id} className={s.contactItem}>\n    <div className=\"contact\">\n      <span className={s.contact_name}>{contact.name}</span>\n      <span className={s.contact_number}>{contact.number}</span>\n    </div>\n    <button onClick={() => onDeleteContact(contact.id)} className={s.contact_btn}>\n      X\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\nimport s from './ContactsList.module.scss';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contact_list}>\n      {contacts.map(contact => (\n        <ContactItem contact={contact} onDeleteContact={onDeleteContact} />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport s from './ContactFilter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <span className={s.filter_label}>Contact filter</span>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactInput from './components/ContactInput';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport ShortId from 'shortid';\nimport Filter from './components/ContactFilter';\nimport s from './styles/base.module.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handlerContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const newContact = {\n      id: ShortId.generate(),\n      name: name,\n      number: number,\n    };\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === newContact.name.toLowerCase()) ||\n      contacts.find(contact => contact.number === newContact.number)\n    ) {\n      alert(`${newContact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  contactFilter = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredNumbers = this.contactFilter();\n\n    return (\n      <div className={s.main_container}>\n        <h1 className=\"title\">Phonebook</h1>\n\n        <ContactInput onSubmit={this.handlerContact} />\n\n        <h2 className=\"title\">Contacts</h2>\n\n        <Filter onChange={this.changeFilter} value={filter} />\n\n        <ContactsList contacts={filteredNumbers} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}